---
interface Props {
  id: string;
}

const { id } = Astro.props;
---

{
  id && (
    <astro-voice data-id={id}>
      <button
        id="play-voice"
        class="fixed right-3 top-3 z-20 flex w-24 items-center gap-1 text-sm"
        aria-label="play text content as audio"
      >
        <span class="sr-only">play text content as audio</span>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          stroke-width="2"
          stroke="currentColor"
          fill="none"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path
            d="M6 4v16a1 1 0 0 0 1.524 .852l13 -8a1 1 0 0 0 0 -1.704l-13 -8a1 1 0 0 0 -1.524 .852z"
            stroke-width="0"
            fill="currentColor"
          />
        </svg>
        Read (AI)
      </button>
    </astro-voice>
  )
}

<script>
  const playIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M6 4v16a1 1 0 0 0 1.524 .852l13 -8a1 1 0 0 0 0 -1.704l-13 -8a1 1 0 0 0 -1.524 .852z" stroke-width="0" fill="currentColor" /></svg>`;
  const pauseIcon = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M9 4h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2z" stroke-width="0" fill="currentColor" /><path d="M17 4h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h2a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2z" stroke-width="0" fill="currentColor" /></svg>`;

  const audio = new Audio();
  audio.volume = 0.5;

  class AstroVoice extends HTMLElement {
    constructor() {
      super();

      const id = this.dataset.id;

      audio.src = `/voice/${id}.mp3`;

      const button = document.querySelector("button#play-voice");

      if (button) {
        button.addEventListener("click", () => {
          if (audio.paused) {
            audio.play();
          } else {
            audio.pause();
          }
        });

        audio.addEventListener(
          "play",
          () => (button.innerHTML = pauseIcon + "Stop"),
        );
        audio.addEventListener(
          "pause",
          () => (button.innerHTML = playIcon + "Read (AI)"),
        );
      }
    }
  }

  customElements.define("astro-voice", AstroVoice);

  function initVoice() {}

  initVoice();

  document.addEventListener("astro:after-swap", () => initVoice());
</script>
