---
import { getCollection, getEntry } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import { Fade } from "@/components/Fade";
import Tool from "@/components/pages/home/Tool.astro";
import ProjectCard from "@/components/pages/home/ProjectCard.astro";

const tools = (await getCollection("tools")).sort(
  (a, b) => a.data.order - b.data.order,
);

const projects = (await getCollection("projects")).sort(
  (a, b) => a.data.order - b.data.order,
);

const page = await getEntry("pages", "home");
const { headings } = await page.render();

const textInput = headings
  .map((heading) => heading.text)
  .join(`<break time="0.5s" />`);

if (import.meta.env.PROD) {
  /*await fetch(`${Astro.request.url}/api/voice`, {
    method: "POST",
    body: JSON.stringify({
      textInput,
    }),
  });*/
}
---

<Layout voice>
  <Fade client:visible>
    <h1>{headings[0].text}</h1>
  </Fade>

  <Fade client:visible>
    <div class="flex flex-col gap-6">
      <div class="space-y-4">
        <h2>{headings[1].text}</h2>
        <ul class="grid grid-cols-2 justify-center gap-6 sm:grid-cols-4">
          {
            tools.map(({ slug, data: tool }) => (
              <Tool name={tool.name} slug={slug} url={tool.url} />
            ))
          }
        </ul>
      </div>
    </div>
  </Fade>

  <Fade client:visible delay={0.25}>
    <h2 class="mt-6">{headings[2].text}</h2>
  </Fade>
  <div
    class="grid justify-center gap-6 sm:grid-cols-2 lg:grid-cols-3 lg:gap-10"
  >
    {
      projects.map((project) => (
        <Fade client:visible delay={0.25}>
          <ProjectCard project={project} />
        </Fade>
      ))
    }
  </div>
</Layout>
