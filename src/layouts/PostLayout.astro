---
import { type CollectionEntry } from "astro:content";
import { type MarkdownHeading } from "astro";

import Layout from "./Layout.astro";
import TableOfContents from "@/components/pages/blog/TableOfContents.astro";

import { Fade } from "@/components/Fade";

interface Props {
  frontmatter:
    | CollectionEntry<"posts">["data"]
    | CollectionEntry<"notes">["data"];
  headings: MarkdownHeading[];
  tags?: CollectionEntry<"tags">[];
}

const { frontmatter, headings, tags } = Astro.props;
---

<Layout title={`${frontmatter.title} - `}>
  <Fragment slot="head">
    <slot name="head" />
  </Fragment>

  <Fade client:visible><h1>{frontmatter.title}</h1></Fade>

  <Fade client:visible delay={0.25}>
    <p class="mb-2 text-center text-sm">
      {frontmatter.title === "All About Astro" && "Last updated"}
      {
        new Date(frontmatter.date).toLocaleDateString("en-NZ", {
          year: "numeric",
          month: "long",
          day: "numeric",
        })
      }
    </p>
    <div class="flex items-center justify-center gap-1.5">
      {
        tags &&
          tags.map(({ data: tag }) => (
            <span class="rounded-3xl bg-slate-800 px-2 py-1 text-xs text-white">
              {tag.name}
            </span>
          ))
      }
    </div>
    <div class="prose mt-4 dark:prose-invert">
      <div class="flex flex-col md:flex-row md:items-start">
        <article class="flex-1">
          <slot />
        </article>

        <TableOfContents headings={headings} />
      </div>
    </div>
  </Fade>
</Layout>

<style is:global>
  pre.astro-code {
    border-radius: 1.5rem;
  }
</style>
