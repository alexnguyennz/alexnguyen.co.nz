---
import { Icon } from "astro-icon/components";
---

<div id="theme-toggle" data-testid="theme-toggle">
  <button type="button" aria-label="toggle light theme" class="relative">
    <span class="sr-only">toggle light theme</span>
    <Icon
      name="lucide:sun-medium"
      stroke-width="4px"
      class="h-7 w-7 scale-110 rounded-l-lg border-2 border-black bg-black text-white dark:scale-100 dark:bg-white dark:text-black hover:dark:scale-110"
    />
  </button>
  <button type="button" aria-label="toggle dark theme" class="relative">
    <span class="sr-only">toggle dark theme</span>
    <Icon
      name="lucide:moon"
      stroke-width="4px"
      class="h-7 w-7 scale-100 rounded-r-lg border-2 border-black hover:scale-110 dark:scale-110 dark:bg-black dark:text-white"
    />
  </button>
</div>

<script is:inline>
  const handleToggleClick = async () => {
    if (document.startViewTransition)
      await document.startViewTransition().ready;

    const element = document.documentElement;
    element.classList.toggle("dark");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");

    // run page animation
    const { top, left, width, height } = document
      .getElementById("theme-toggle")
      .getBoundingClientRect();

    const x = left + width / 2;
    const y = top + height / 2;
    const right = window.innerWidth - left;
    const bottom = window.innerHeight - top;
    const maxRadius = Math.hypot(Math.max(left, right), Math.max(top, bottom));

    document.documentElement.animate(
      {
        clipPath: [
          `circle(0px at ${x}px ${y}px)`,
          `circle(${maxRadius}px at ${x}px ${y}px)`,
        ],
      },
      {
        duration: 750,
        easing: "ease-in-out",
        pseudoElement: "::view-transition-new(root)",
      },
    );
  };
  function initTheme() {
    const theme = localStorage.getItem("theme");

    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }

    document
      .getElementById("theme-toggle")
      .addEventListener("click", handleToggleClick);
  }

  initTheme();

  document.addEventListener("astro:after-swap", () => initTheme());

  document.addEventListener(
    "astro:page-load",
    () => {
      const themeToggle = document.querySelector("#theme-toggle");
      if (themeToggle && window.innerWidth > 640) {
        themeToggle.classList.add("opacity-0");
        themeToggle.style.animation = "fade 0.5s 0.25s forwards";
      }
    },
    { once: true },
  );
</script>
